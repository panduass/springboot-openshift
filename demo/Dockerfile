# # 1. Build stage
# FROM maven:3.9.9-eclipse-temurin-21 AS builder
# WORKDIR /app

# # Cache dependencies
# COPY pom.xml .
# RUN mvn dependency:go-offline -B

# # Copy the source and build
# COPY src ./src
# RUN mvn clean package -DskipTests

# # 2. Runtime stage
# FROM eclipse-temurin:21-jre-alpine
# WORKDIR /app

# # Add a non-root user for security
# RUN addgroup -S spring && adduser -S spring -G spring \
#     && mkdir -p /app/logs \
#     && chown -R spring:spring /app/logs

# USER spring:spring

# # Copy only the built jar
# COPY --from=builder /app/target/*.jar app.jar

# # Expose default Spring Boot port
# EXPOSE 8080

# # Run the application
# ENTRYPOINT ["java", "-jar", "/app/app.jar"]

# Stage 1: Build the Spring Boot application
FROM maven:3.8.5-openjdk-17 AS builder
WORKDIR /app
COPY pom.xml .
COPY src ./src
RUN mvn clean package -DskipTests

# Stage 2: Create the final runtime image
FROM eclipse-temurin:21-jre-alpine
WORKDIR /app
COPY --from=builder /app/target/*.jar app.jar
EXPOSE 8080
CMD ["java", "-jar", "app.jar"]

