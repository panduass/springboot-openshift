pipeline {
    agent any

    environment {
        // --- Konfigurasi Proyek Anda ---
        MAVEN_HOME = tool 'Maven-3.9.11'
        JAVA_HOME = tool 'JDK-21'
        PATH = "${JAVA_HOME}/bin:${MAVEN_HOME}/bin:${env.PATH}"

        // --- Konfigurasi Docker Hub ---
        DOCKER_REPO_NAME = "panduass/springboot-openshift"
        DOCKER_IMAGE_TAG = "second"
        DOCKER_IMAGE = "${DOCKER_REPO_NAME}:${env.BUILD_NUMBER}"
        DOCKER_LATEST_IMAGE = "${DOCKER_REPO_NAME}:${DOCKER_IMAGE_TAG}"

        // --- Konfigurasi OpenShift ---
        OC_SERVER = 'https://api.rm1.0a51.p1.openshiftapps.com:6443'
        OC_PROJECT = 'panduass-dev'
        OC_APP_NAME = 'springboot-openshift'
        OC_APP_PORT = '8080'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/panduass/springboot-openshift.git'
            }
        }
        
        stage('Build & Package') {
            steps {
                sh 'mvn clean package -DskipTests'
            }
            post {
                success {
                    archiveArtifacts artifacts: "target/*.jar", fingerprint: true
                }
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_LATEST_IMAGE} -t ${DOCKER_IMAGE} ."
                }
            }
        }
        
        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push ${DOCKER_IMAGE}
                        docker push ${DOCKER_LATEST_IMAGE}
                        docker logout
                    '''
                }
            }
        }

        stage('Deploy to OpenShift') {
            steps {
                script {
                    echo 'Deploying to OpenShift...'
                    withCredentials([string(credentialsId: 'openshift-v3', variable: 'OC_TOKEN')]) {
                        // Login dan set project
                        sh "oc login --token=${OC_TOKEN} --server=${OC_SERVER} --insecure-skip-tls-verify=true"
                        sh "oc project ${OC_PROJECT}"

                        // Tag image dari Docker Hub ke OpenShift ImageStream
                        // Ini akan memicu deployment otomatis jika DeploymentConfig sudah disiapkan dengan ImageChange trigger
                        sh "oc tag --insecure=true ${DOCKER_LATEST_IMAGE} ${OC_APP_NAME}:${DOCKER_IMAGE_TAG} -n ${OC_PROJECT}"
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Application deployed to OpenShift successfully! ✅'
        }
        failure {
            echo 'Deployment failed. Please check the logs. ❌'
        }
    }
}